{
  'parser': 'babel-eslint',
  'extends': 'airbnb',
  'globals': {
    '$': false,
    '_': false,
    '__dirname': false,
    'arguments': false,
    'Backbone': false,
    'cui': false,
    'describe': false,
    'expect': false,
    'exports': false,
    'it': false,
    'jQuery': false,
    'module': false,
    'require': false
  },
  'rules': {

    /*
     *
     * React-related rules
     *
     */
    'react/jsx-curly-spacing': [2, 'always'],

    /*
     *
     * Extra ES6-related restrictions and misc AirBnB overrides
     *
     */
    // GUI team has decided against dangling commas
    'comma-dangle': [2, 'never'],
    'callback-return': 2,
    // The consistency checks do not match our early-returns + normal callback coding style
    'consistent-return': 0,
    'constructor-super': 2,
    // eslint's rules for this does not yet match our early-return pattern
    'curly': 0,
    // Functions can be anonymous when used as an argument
    'func-names': 0,
    // Enforces how MDN writes their generators
    'generator-star-spacing': [2, {'before': false, 'after': true}],
    'handle-callback-err': [2, '^(err|.*(e|E)rror)'],
    'indent': [2, 2, {'SwitchCase': 1, 'VariableDeclarator': { 'var': 2, 'let': 2, 'const': 3 } }],
    'lines-around-comment': [2, {'beforeBlockComment': true, 'beforeLineComment': true,
                                 'allowBlockStart': true, 'allowObjectStart': true}],
    'no-class-assign': 2,
    'no-dupe-class-members': 2,
    // Allow multiple spaces only in certain situations involving aligned white spaces
    'no-multi-spaces': [2, {
      exceptions: {
        'ImportDeclaration': true,
        'Property': true,
        'LogicalExpression': true,
        'VariableDeclarator': true,
      }
    }],
    // Do not allow shadowed functions except in cases of extremely common parameter names
    'no-shadow': [2, { 'allow': ['callback', 'cb', 'done', 'err', 'error', 'next', 'req', 'res'] }],
    'no-this-before-super': 2,
    // We directly modify the `req` parameter in routing middleware
    'no-param-reassign': [2, { 'props': false }],
    // Currently a standard usage in GUI js
    'no-underscore-dangle': 0,
    // Only enforce shorthand on properties because doing so on methods produces weird behavior with anonymous fn
    'object-shorthand': [2, 'properties'],
    // Aggregate uninitialized declarations into one line. Otherwise, use multiple
    'one-var': [2, { 'uninitialized': 'always', 'initialized': 'never' }],
    // We allow developers to add padded blocks if they aid readability
    'padded-blocks': 0,
    // We do not gain anything from multiline arrow functions
    'prefer-arrow-callback': 0,
    // Use our modded prefer-const rule so that we only enforce the rule in topmost scope
    'prefer-const': 2,
    // Benefit of string templates is not worth all the white noise of current GUI infractions
    'prefer-template': 0,
    'require-yield': 2,
    // We do not like space before the first parenthesis in function decl
    'space-before-function-paren': [2, 'never'],
    'spaced-comment': [2, 'always', { 'markers': ['/', '*', 'global'] }],
    // With modules, `use-strict` is superfluous but we have a mixed building system
    'strict': 0,

    // This seems to be current issue with this https://github.com/benmosher/eslint-plugin-import/issues/352
    'import/no-unresolved': 0,

    /*
     *
     * Taken & adapted from Cloudability GUI's eslint
     *
     */
    'block-spacing': [2, 'always'],
    'brace-style': [2, '1tbs', { 'allowSingleLine': false }],
    'comma-style': [2, 'last'],
    'consistent-this': [2, 'self'],
    'func-style': [2, 'declaration', { 'allowArrowFunctions': true }],
    // eslint's options for multiline key-spacing is not yet fine-grained enough to turn on the check
    'key-spacing': 0,
    'new-cap': [2, {'capIsNew': false}],
    'new-parens': 2,
    'no-array-constructor': 2,
    'no-continue': 2,
    'no-lonely-if': 2,
    'no-multiple-empty-lines': [2, { 'max': 2 }],
    'no-unneeded-ternary': 2,
    'object-curly-spacing': [2, 'always'],
    'operator-linebreak': [2, 'after'],
    'space-unary-ops': [2, { 'words': true, 'nonwords': false }],

    // Stuff taken & adapted from Datahero's unfinished eslint
    'no-alert': 2,
    'no-bitwise': 2,
    'no-constant-condition': 2,
    'no-debugger': 2,
    'no-extra-boolean-cast': 2,
    'no-implied-eval': 2,
    'no-label-var': 2,
    'no-process-exit': 2,
    'no-undef-init': 2,
    'no-unused-vars': [2, {'vars': 'all', 'args': 'after-used',
                           'argsIgnorePattern': 'callback|done|next',
                           'varsIgnorePattern': '_|colors'}],
    'no-use-before-define': [2, 'nofunc'],
    'no-with': 2,
    'max-len': [2, 120, 2, { 'ignoreUrls': true }],
    'use-isnan': 2,
    // we want to explicitly define boolean values within jsx
    'react/jsx-boolean-value': [2, 'always'],
  }
}
